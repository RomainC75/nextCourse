{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async res => {\n  const {\n    MongoClient\n  } = require(\"mongodb\");\n\n  const url = \"mongodb+srv://mongoAUser:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async (client, collection, data) => {\n  try {\n    const db = client.db();\n    const ans = await db.collection(collection).insertOne({\n      email: data.email\n    });\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error(\"cannot insert the document\");\n  }\n};\n\nconst mongoCommentSavingHandler = async (client, collection, data) => {\n  try {\n    const db = client.db();\n    const ans = await db.collection().insertOne(data);\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error('cannot insert the document');\n  }\n};\n\nconst mongoCommentReadingHandler = async (client, collection, eventId) => {\n  try {\n    const db = client.db();\n    const ans = await db.collection(collection).find({\n      eventId\n    }).toSort({\n      _id: -1\n    }).toArray();\n    console.log(\"==>ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error('cannot get the documents');\n  }\n};\n\nexport { mongoEmailRegistrationHandler, mongoCommentSavingHandler, mongoCommentReadingHandler, mongoConnect };","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/helpers/mongodb.js"],"names":["MongoClient","mongoConnect","res","require","url","client","connect","mongoEmailRegistrationHandler","collection","data","db","ans","insertOne","email","console","log","close","error","Error","mongoCommentSavingHandler","mongoCommentReadingHandler","eventId","find","toSort","_id","toArray"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;AAClC,QAAM;AAAEF,IAAAA;AAAF,MAAkBG,OAAO,CAAC,SAAD,CAA/B;;AACA,QAAMC,GAAG,GACP,4EADF;AAEA,QAAMC,MAAM,GAAG,IAAIL,WAAJ,CAAgBI,GAAhB,CAAf;AACA,QAAMC,MAAM,CAACC,OAAP,EAAN;AACA,SAAOD,MAAP;AACD,CAPD;;AASA,MAAME,6BAA6B,GAAG,OAAOF,MAAP,EAAeG,UAAf,EAA2BC,IAA3B,KAAoC;AACxE,MAAI;AACF,UAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,UAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBF,UADe,CACJA,UADI,EAEfI,SAFe,CAEL;AAAEC,MAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAd,KAFK,CAAlB;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAtB;AACA,UAAMN,MAAM,CAACW,KAAP,EAAN;AACA,WAAOL,GAAP;AACD,GARD,CAQE,OAAOM,KAAP,EAAc;AACd,UAAMC,KAAK,CAAC,4BAAD,CAAX;AACD;AACF,CAZD;;AAcA,MAAMC,yBAAyB,GAAG,OAAOd,MAAP,EAAeG,UAAf,EAA2BC,IAA3B,KAAoC;AACpE,MAAI;AACF,UAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,UAAMC,GAAG,GAAG,MAAMD,EAAE,CAACF,UAAH,GAAgBI,SAAhB,CAA0BH,IAA1B,CAAlB;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAtB;AACA,UAAMN,MAAM,CAACW,KAAP,EAAN;AACA,WAAOL,GAAP;AACD,GAND,CAME,OAAOM,KAAP,EAAc;AACd,UAAMC,KAAK,CAAC,4BAAD,CAAX;AACD;AACF,CAVD;;AAYA,MAAME,0BAA0B,GAAG,OAAOf,MAAP,EAAeG,UAAf,EAA2Ba,OAA3B,KAAuC;AACxE,MAAI;AACF,UAAMX,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,UAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBF,UADe,CACJA,UADI,EAEfc,IAFe,CAEV;AAAED,MAAAA;AAAF,KAFU,EAGfE,MAHe,CAGR;AAAEC,MAAAA,GAAG,EAAE,CAAC;AAAR,KAHQ,EAIfC,OAJe,EAAlB;AAMAX,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,GAAzB;AACA,UAAMN,MAAM,CAACW,KAAP,EAAN;AACA,WAAOL,GAAP;AACD,GAXD,CAWE,OAAOM,KAAP,EAAc;AACd,UAAMC,KAAK,CAAC,0BAAD,CAAX;AACD;AACF,CAfD;;AAiBA,SACEX,6BADF,EAEEY,yBAFF,EAGEC,0BAHF,EAIEnB,YAJF","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async (res) => {\n  const { MongoClient } = require(\"mongodb\");\n  const url =\n    \"mongodb+srv://mongoAUser:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async (client, collection, data) => {\n  try {\n    const db = client.db();\n    const ans = await db\n      .collection(collection)\n      .insertOne({ email: data.email });\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error(\"cannot insert the document\");\n  }\n};\n\nconst mongoCommentSavingHandler = async (client, collection, data) => {\n  try {\n    const db = client.db();\n    const ans = await db.collection().insertOne(data);\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error('cannot insert the document')\n  }\n};\n\nconst mongoCommentReadingHandler = async (client, collection, eventId) => {\n  try {\n    const db = client.db();\n    const ans = await db\n      .collection(collection)\n      .find({ eventId })\n      .toSort({ _id: -1 })\n      .toArray();\n\n    console.log(\"==>ans : \", ans);\n    await client.close();\n    return ans;\n  } catch (error) {\n    throw Error('cannot get the documents')\n  }\n};\n\nexport {\n  mongoEmailRegistrationHandler,\n  mongoCommentSavingHandler,\n  mongoCommentReadingHandler,\n  mongoConnect,\n};\n"]},"metadata":{},"sourceType":"module"}