{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/rom/Documents/dev/nextjs/tuto/section10-context/components/input/newsletter-registration.js\",\n    _s = $RefreshSig$();\n\nimport { useRef, useState, useContext, useEffect } from \"react\";\nimport classes from \"./newsletter-registration.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction NewsletterRegistration() {\n  _s();\n\n  var _useState = useState(false),\n      isEmailRegistered = _useState[0],\n      setIsEmailRegistered = _useState[1];\n\n  var notificationCtx = useContext(NotificationContext);\n  useEffect(function () {\n    console.log('notification');\n  });\n  var inputRef = useRef();\n\n  function registrationHandler(event) {\n    event.preventDefault();\n    console.log(\"==>\", inputRef.current.value);\n    notificationCtx.showNotification({\n      title: \"Signing up ...\",\n      message: \"Registering for newsletter.\",\n      status: \"pending\"\n    });\n    fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify({\n        email: inputRef.current.value\n      }),\n      headers: {\n        \"Content-type\": \"application/json\"\n      }\n    }).then(function (raw) {\n      // fetch!=axios\n      // fetch doen't execute the catch block when receiving a 400/500 status code\n      if (raw.ok) {\n        return raw.json();\n      }\n\n      return raw.json().then(function (data) {\n        throw new Error(\"error message\");\n      });\n    }).then(function (data) {\n      // setIsEmailRegistered(true);\n      notificationCtx.showNotification({\n        title: \"Success ! \",\n        message: \"Succesfully registered for newsletter !\",\n        status: \"succes\"\n      });\n    })[\"catch\"](function (err) {\n      notificationCtx.showNotification({\n        title: \"Error ! \",\n        message: err.message || \"Something went wrong !\",\n        status: \"error\"\n      });\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.newsletter,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Sign up to stay updated!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: registrationHandler,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.control,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          id: \"email\",\n          placeholder: \"Your email\",\n          \"aria-label\": \"Your email\",\n          ref: inputRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), isEmailRegistered && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: \"REGISTERED\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(NewsletterRegistration, \"Q5fyOCwEZgkQWBHVIyzVXWBmgvE=\");\n\n_c = NewsletterRegistration;\nexport default NewsletterRegistration;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewsletterRegistration\");","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section10-context/components/input/newsletter-registration.js"],"names":["useRef","useState","useContext","useEffect","classes","NotificationContext","NewsletterRegistration","isEmailRegistered","setIsEmailRegistered","notificationCtx","console","log","inputRef","registrationHandler","event","preventDefault","current","value","showNotification","title","message","status","fetch","method","body","JSON","stringify","email","headers","then","raw","ok","json","data","Error","err","newsletter","control","color"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,QAAjB,EAA2BC,UAA3B,EAAuCC,SAAvC,QAAwD,OAAxD;AACA,OAAOC,OAAP,MAAoB,sCAApB;AAEA,OAAOC,mBAAP,MAAgC,kCAAhC;;AAEA,SAASC,sBAAT,GAAkC;AAAA;;AAAA,kBACkBL,QAAQ,CAAC,KAAD,CAD1B;AAAA,MACzBM,iBADyB;AAAA,MACNC,oBADM;;AAEhC,MAAMC,eAAe,GAAGP,UAAU,CAACG,mBAAD,CAAlC;AAEAF,EAAAA,SAAS,CAAC,YAAI;AACZO,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,GAFQ,CAAT;AAKA,MAAMC,QAAQ,GAAGZ,MAAM,EAAvB;;AACA,WAASa,mBAAT,CAA6BC,KAA7B,EAAoC;AAClCA,IAAAA,KAAK,CAACC,cAAN;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBC,QAAQ,CAACI,OAAT,CAAiBC,KAApC;AAEAR,IAAAA,eAAe,CAACS,gBAAhB,CAAiC;AAC/BC,MAAAA,KAAK,EAAE,gBADwB;AAE/BC,MAAAA,OAAO,EAAE,6BAFsB;AAG/BC,MAAAA,MAAM,EAAE;AAHuB,KAAjC;AAMAC,IAAAA,KAAK,CAAC,mBAAD,EAAsB;AACzBC,MAAAA,MAAM,EAAE,MADiB;AAEzBC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAEC,QAAAA,KAAK,EAAEf,QAAQ,CAACI,OAAT,CAAiBC;AAA1B,OAAf,CAFmB;AAGzBW,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT;AAHgB,KAAtB,CAAL,CAOGC,IAPH,CAOQ,UAACC,GAAD,EAAS;AACb;AACA;AACA,UAAIA,GAAG,CAACC,EAAR,EAAY;AACV,eAAOD,GAAG,CAACE,IAAJ,EAAP;AACD;;AACD,aAAOF,GAAG,CAACE,IAAJ,GAAWH,IAAX,CAAgB,UAACI,IAAD,EAAU;AAC/B,cAAM,IAAIC,KAAJ,CAAU,eAAV,CAAN;AACD,OAFM,CAAP;AAGD,KAhBH,EAiBGL,IAjBH,CAiBQ,UAACI,IAAD,EAAU;AACd;AACAxB,MAAAA,eAAe,CAACS,gBAAhB,CAAiC;AAC/BC,QAAAA,KAAK,EAAE,YADwB;AAE/BC,QAAAA,OAAO,EAAE,yCAFsB;AAG/BC,QAAAA,MAAM,EAAE;AAHuB,OAAjC;AAKD,KAxBH,WAyBS,UAACc,GAAD,EAAS;AACd1B,MAAAA,eAAe,CAACS,gBAAhB,CAAiC;AAC/BC,QAAAA,KAAK,EAAE,UADwB;AAE/BC,QAAAA,OAAO,EAAEe,GAAG,CAACf,OAAJ,IAAe,wBAFO;AAG/BC,QAAAA,MAAM,EAAE;AAHuB,OAAjC;AAKD,KA/BH;AAgCD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAEjB,OAAO,CAACgC,UAA5B;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAEvB,mBAAhB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAET,OAAO,CAACiC,OAAxB;AAAA,gCACE;AACE,UAAA,IAAI,EAAC,OADP;AAEE,UAAA,EAAE,EAAC,OAFL;AAGE,UAAA,WAAW,EAAC,YAHd;AAIE,wBAAW,YAJb;AAKE,UAAA,GAAG,EAAEzB;AALP;AAAA;AAAA;AAAA;AAAA,gBADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,EAcGL,iBAAiB,iBAAI;AAAG,MAAA,KAAK,EAAE;AAAE+B,QAAAA,KAAK,EAAE;AAAT,OAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAdxB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAxEQhC,sB;;KAAAA,sB;AA0ET,eAAeA,sBAAf","sourcesContent":["import { useRef, useState, useContext, useEffect } from \"react\";\nimport classes from \"./newsletter-registration.module.css\";\n\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction NewsletterRegistration() {\n  const [isEmailRegistered, setIsEmailRegistered] = useState(false);\n  const notificationCtx = useContext(NotificationContext);\n\n  useEffect(()=>{\n    console.log('notification')\n  })\n  \n\n  const inputRef = useRef();\n  function registrationHandler(event) {\n    event.preventDefault();\n    console.log(\"==>\", inputRef.current.value);\n\n    notificationCtx.showNotification({\n      title: \"Signing up ...\",\n      message: \"Registering for newsletter.\",\n      status: \"pending\",\n    });\n\n    fetch(\"/api/registration\", {\n      method: \"POST\",\n      body: JSON.stringify({ email: inputRef.current.value }),\n      headers: {\n        \"Content-type\": \"application/json\",\n      },\n    })\n      .then((raw) => {\n        // fetch!=axios\n        // fetch doen't execute the catch block when receiving a 400/500 status code\n        if (raw.ok) {\n          return raw.json();\n        }\n        return raw.json().then((data) => {\n          throw new Error(\"error message\");\n        });\n      })\n      .then((data) => {\n        // setIsEmailRegistered(true);\n        notificationCtx.showNotification({\n          title: \"Success ! \",\n          message: \"Succesfully registered for newsletter !\",\n          status: \"succes\",\n        });\n      })\n      .catch((err) => {\n        notificationCtx.showNotification({\n          title: \"Error ! \",\n          message: err.message || \"Something went wrong !\",\n          status: \"error\",\n        });\n      });\n  }\n\n  return (\n    <section className={classes.newsletter}>\n      <h2>Sign up to stay updated!</h2>\n      <form onSubmit={registrationHandler}>\n        <div className={classes.control}>\n          <input\n            type=\"email\"\n            id=\"email\"\n            placeholder=\"Your email\"\n            aria-label=\"Your email\"\n            ref={inputRef}\n          />\n          <button>Register</button>\n        </div>\n      </form>\n      {isEmailRegistered && <p style={{ color: \"red\" }}>REGISTERED</p>}\n    </section>\n  );\n}\n\nexport default NewsletterRegistration;\n"]},"metadata":{},"sourceType":"module"}