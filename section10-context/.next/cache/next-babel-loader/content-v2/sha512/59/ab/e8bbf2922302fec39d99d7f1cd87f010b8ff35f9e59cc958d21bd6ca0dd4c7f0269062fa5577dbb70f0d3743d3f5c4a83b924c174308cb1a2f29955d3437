{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async res => {\n  const {\n    MongoClient\n  } = require(\"mongodb\");\n\n  const url = \"mongodb+srv://mongoAUse:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async (client, collection, data) => {\n  const db = client.db();\n  const ans = await db.collection(collection).insertOne({\n    email: data.email\n  });\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst mongoCommentSavingHandler = async (client, collection, data) => {\n  const db = client.db();\n  const ans = await db.collection(collection).insertOne(data);\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst getAllComments = async (client, collection, eventId) => {\n  const db = client.db();\n  const ans = await db.collection(collection).find({\n    eventId\n  }) //   .toSort({ _id: -1 })\n  .toArray();\n  console.log(\"==>ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nexport { mongoEmailRegistrationHandler, mongoCommentSavingHandler, getAllComments, mongoConnect };","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/helpers/mongodb.js"],"names":["MongoClient","mongoConnect","res","require","url","client","connect","mongoEmailRegistrationHandler","collection","data","db","ans","insertOne","email","console","log","close","mongoCommentSavingHandler","getAllComments","eventId","find","toArray"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,YAAY,GAAG,MAAOC,GAAP,IAAe;AAClC,QAAM;AAAEF,IAAAA;AAAF,MAAkBG,OAAO,CAAC,SAAD,CAA/B;;AACA,QAAMC,GAAG,GACP,2EADF;AAEA,QAAMC,MAAM,GAAG,IAAIL,WAAJ,CAAgBI,GAAhB,CAAf;AACA,QAAMC,MAAM,CAACC,OAAP,EAAN;AACA,SAAOD,MAAP;AACD,CAPD;;AASA,MAAME,6BAA6B,GAAG,OAAOF,MAAP,EAAeG,UAAf,EAA2BC,IAA3B,KAAoC;AAEtE,QAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBF,UADe,CACJA,UADI,EAEfI,SAFe,CAEL;AAAEC,IAAAA,KAAK,EAAEJ,IAAI,CAACI;AAAd,GAFK,CAAlB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAtB;AACA,QAAMN,MAAM,CAACW,KAAP,EAAN;AACA,SAAOL,GAAP;AAEH,CAVD;;AAYA,MAAMM,yBAAyB,GAAG,OAAOZ,MAAP,EAAeG,UAAf,EAA2BC,IAA3B,KAAoC;AAElE,QAAMC,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CAACF,UAAH,CAAcA,UAAd,EAA0BI,SAA1B,CAAoCH,IAApC,CAAlB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBJ,GAAtB;AACA,QAAMN,MAAM,CAACW,KAAP,EAAN;AACA,SAAOL,GAAP;AAEH,CARD;;AAUA,MAAMO,cAAc,GAAG,OAAOb,MAAP,EAAeG,UAAf,EAA2BW,OAA3B,KAAuC;AAC1D,QAAMT,EAAE,GAAGL,MAAM,CAACK,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBF,UADe,CACJA,UADI,EAEfY,IAFe,CAEV;AAAED,IAAAA;AAAF,GAFU,EAGlB;AAHkB,GAIfE,OAJe,EAAlB;AAMAP,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBJ,GAAzB;AACA,QAAMN,MAAM,CAACW,KAAP,EAAN;AACA,SAAOL,GAAP;AACH,CAXD;;AAaA,SACEJ,6BADF,EAEEU,yBAFF,EAGEC,cAHF,EAIEjB,YAJF","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async (res) => {\n  const { MongoClient } = require(\"mongodb\");\n  const url =\n    \"mongodb+srv://mongoAUse:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async (client, collection, data) => {\n  \n    const db = client.db();\n    const ans = await db\n      .collection(collection)\n      .insertOne({ email: data.email });\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  \n};\n\nconst mongoCommentSavingHandler = async (client, collection, data) => {\n  \n    const db = client.db();\n    const ans = await db.collection(collection).insertOne(data);\n    console.log(\"ans : \", ans);\n    await client.close();\n    return ans;\n  \n};\n\nconst getAllComments = async (client, collection, eventId) => {\n    const db = client.db();\n    const ans = await db\n      .collection(collection)\n      .find({ eventId })\n    //   .toSort({ _id: -1 })\n      .toArray();\n\n    console.log(\"==>ans : \", ans);\n    await client.close();\n    return ans;\n};\n\nexport {\n  mongoEmailRegistrationHandler,\n  mongoCommentSavingHandler,\n  getAllComments,\n  mongoConnect,\n};\n"]},"metadata":{},"sourceType":"module"}