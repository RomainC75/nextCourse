{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/rom/Documents/dev/nextjs/tuto/section10-context/store/notification-context.js\";\nimport { createContext, useEffect, useState } from \"react\";\nconst NotificationContext = /*#__PURE__*/createContext({\n  notification: null,\n  // {title, message, status}\n  showNotification: function (notificationData) {},\n  hideNotification: function () {}\n});\nexport function NotificationContextProvider(props) {\n  const {\n    0: activeNotification,\n    1: setActiveNotification\n  } = useState();\n  useEffect(() => {\n    if (activeNotification && (activeNotification.status === \"error\" || activeNotification.status === \"success\")) {\n      const timer = setTimeout(() => {\n        hideNotificationHandle();\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [activeNotification]);\n\n  function showNotificationHandler(notificationData) {\n    setActiveNotification(notificationData);\n  }\n\n  function hideNotificationHandle() {\n    setActiveNotification(null);\n  }\n\n  const context = {\n    notification: activeNotification,\n    showNotification: showNotificationHandler,\n    hideNotification: hideNotificationHandle\n  };\n  return /*#__PURE__*/_jsxDEV(NotificationContext.Provider, {\n    value: context,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\nexport default NotificationContext;","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section10-context/store/notification-context.js"],"names":["createContext","useEffect","useState","NotificationContext","notification","showNotification","notificationData","hideNotification","NotificationContextProvider","props","activeNotification","setActiveNotification","status","timer","setTimeout","hideNotificationHandle","clearTimeout","showNotificationHandler","context","children"],"mappings":";;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAAmD,OAAnD;AAEA,MAAMC,mBAAmB,gBAAGH,aAAa,CAAC;AACxCI,EAAAA,YAAY,EAAE,IAD0B;AACpB;AACpBC,EAAAA,gBAAgB,EAAE,UAAUC,gBAAV,EAA4B,CAAE,CAFR;AAGxCC,EAAAA,gBAAgB,EAAE,YAAY,CAAE;AAHQ,CAAD,CAAzC;AAMA,OAAO,SAASC,2BAAT,CAAqCC,KAArC,EAA4C;AACjD,QAAM;AAAA,OAACC,kBAAD;AAAA,OAAqBC;AAArB,MAA8CT,QAAQ,EAA5D;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACd,QACES,kBAAkB,KACjBA,kBAAkB,CAACE,MAAnB,KAA8B,OAA9B,IACCF,kBAAkB,CAACE,MAAnB,KAA8B,SAFd,CADpB,EAIE;AACA,YAAMC,KAAK,GAAGC,UAAU,CAAC,MAAM;AAC7BC,QAAAA,sBAAsB;AACvB,OAFuB,EAErB,IAFqB,CAAxB;AAGA,aAAO,MAAM;AACXC,QAAAA,YAAY,CAACH,KAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAbQ,EAaN,CAACH,kBAAD,CAbM,CAAT;;AAeA,WAASO,uBAAT,CAAiCX,gBAAjC,EAAmD;AACjDK,IAAAA,qBAAqB,CAACL,gBAAD,CAArB;AACD;;AAED,WAASS,sBAAT,GAAkC;AAChCJ,IAAAA,qBAAqB,CAAC,IAAD,CAArB;AACD;;AAED,QAAMO,OAAO,GAAG;AACdd,IAAAA,YAAY,EAAEM,kBADA;AAEdL,IAAAA,gBAAgB,EAAEY,uBAFJ;AAGdV,IAAAA,gBAAgB,EAAEQ;AAHJ,GAAhB;AAMA,sBACE,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAEG,OAArC;AAAA,cACGT,KAAK,CAACU;AADT;AAAA;AAAA;AAAA;AAAA,UADF;AAKD;AAED,eAAehB,mBAAf","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\n\nconst NotificationContext = createContext({\n  notification: null, // {title, message, status}\n  showNotification: function (notificationData) {},\n  hideNotification: function () {},\n});\n\nexport function NotificationContextProvider(props) {\n  const [activeNotification, setActiveNotification] = useState();\n\n  useEffect(() => {\n    if (\n      activeNotification &&\n      (activeNotification.status === \"error\" ||\n        activeNotification.status === \"success\")\n    ) {\n      const timer = setTimeout(() => {\n        hideNotificationHandle();\n      }, 3000);\n      return () => {\n        clearTimeout(timer);\n      };\n    }\n  }, [activeNotification]);\n\n  function showNotificationHandler(notificationData) {\n    setActiveNotification(notificationData);\n  }\n\n  function hideNotificationHandle() {\n    setActiveNotification(null);\n  }\n\n  const context = {\n    notification: activeNotification,\n    showNotification: showNotificationHandler,\n    hideNotification: hideNotificationHandle,\n  };\n\n  return (\n    <NotificationContext.Provider value={context}>\n      {props.children}\n    </NotificationContext.Provider>\n  );\n}\n\nexport default NotificationContext;\n"]},"metadata":{},"sourceType":"module"}