{"ast":null,"code":"import _regeneratorRuntime from \"/home/rom/Documents/dev/nextjs/tuto/section10-context/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/rom/Documents/dev/nextjs/tuto/section10-context/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/rom/Documents/dev/nextjs/tuto/section10-context/components/input/comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useContext } from \"react\";\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n  _s();\n\n  var _useContext = useContext(NotificationContext),\n      hideNotification = _useContext.hideNotification,\n      showNotification = _useContext.showNotification;\n\n  var eventId = props.eventId;\n\n  var _useState = useState(false),\n      showComments = _useState[0],\n      setShowComments = _useState[1];\n\n  var _useState2 = useState([]),\n      commentsState = _useState2[0],\n      setCommentsState = _useState2[1];\n\n  function toggleCommentsHandler() {\n    setShowComments(function (prevStatus) {\n      return !prevStatus;\n    });\n  }\n\n  function addCommentHandler(_x) {\n    return _addCommentHandler.apply(this, arguments);\n  }\n\n  function _addCommentHandler() {\n    _addCommentHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(commentData) {\n      var res, rawComments, comments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              showNotification({\n                title: \"Pending\",\n                message: \"waiting for the response ...\",\n                status: \"pending\"\n              });\n              _context.next = 4;\n              return fetch(\"/api/comment/\".concat(eventId), {\n                method: \"POST\",\n                body: JSON.stringify(commentData)\n              });\n\n            case 4:\n              res = _context.sent;\n              console.log('res : ', res);\n\n              if (res.ok) {\n                _context.next = 8;\n                break;\n              }\n\n              throw new Error(res);\n\n            case 8:\n              _context.next = 10;\n              return fetch(\"/api/comment/\".concat(eventId));\n\n            case 10:\n              rawComments = _context.sent;\n              _context.next = 13;\n              return rawComments.json();\n\n            case 13:\n              comments = _context.sent;\n              showNotification({\n                title: \"Success\",\n                message: \"job done \",\n                status: \"success\"\n              });\n\n              if (Array.isArray(comments)) {\n                setCommentsState(comments);\n              }\n\n              _context.next = 22;\n              break;\n\n            case 18:\n              _context.prev = 18;\n              _context.t0 = _context[\"catch\"](0);\n              console.log('error : ', _context.t0);\n              showNotification({\n                title: \"Error\",\n                message: \"job done \",\n                status: \"error\"\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 18]]);\n    }));\n    return _addCommentHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? \"Hide\" : \"Show\", \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: commentsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"7KrKxvSacGhYCRGApScfhQ0plSs=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section10-context/components/input/comments.js"],"names":["useState","useContext","CommentList","NewComment","classes","NotificationContext","Comments","props","hideNotification","showNotification","eventId","showComments","setShowComments","commentsState","setCommentsState","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","title","message","status","fetch","method","body","JSON","stringify","res","console","log","ok","Error","rawComments","json","comments","Array","isArray"],"mappings":"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","sourcesContent":["import { useState, useContext } from \"react\";\nimport CommentList from \"./comment-list\";\nimport NewComment from \"./new-comment\";\nimport classes from \"./comments.module.css\";\n\nimport NotificationContext from \"../../store/notification-context\";\n\nfunction Comments(props) {\n  const { hideNotification, showNotification } =\n    useContext(NotificationContext);\n\n  const { eventId } = props;\n\n  const [showComments, setShowComments] = useState(false);\n  const [commentsState, setCommentsState] = useState([]);\n\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n  }\n\n  async function addCommentHandler(commentData) {\n    try {\n      showNotification({\n        title: \"Pending\",\n        message: \"waiting for the response ...\",\n        status: \"pending\",\n      });\n      const res = await fetch(`/api/comment/${eventId}`, {\n        method: \"POST\",\n        body: JSON.stringify(commentData),\n      });\n      console.log('res : ', res)\n      if(!res.ok){\n        throw new Error(res)\n      }\n\n      const rawComments = await fetch(`/api/comment/${eventId}`);\n      const comments = await rawComments.json();\n      \n      showNotification({\n        title: \"Success\",\n        message: \"job done \",\n        status: \"success\",\n      });\n\n      if (Array.isArray(comments)) {\n        setCommentsState(comments);\n      }\n    } catch (error) {\n      console.log('error : ',error)\n      showNotification({\n        title: \"Error\",\n        message: \"job done \",\n        status: \"error\",\n      });\n    }\n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? \"Hide\" : \"Show\"} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList comments={commentsState} />}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}