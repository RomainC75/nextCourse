{"ast":null,"code":"import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async () => {\n  const {\n    MongoClient\n  } = require(\"mongodb\");\n\n  const url = \"mongodb+srv://mongoAUser:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async data => {\n  const client = await mongoConnect();\n  const db = client.db();\n  const ans = await db.collection(\"registration\").insertOne({\n    email: data.email\n  });\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst mongoCommentSavingHandler = async data => {\n  const client = await mongoConnect();\n  const db = client.db();\n  const ans = await db.collection(\"comment\").insertOne(data);\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst mongoCommentReadingHandler = async eventId => {\n  const client = await mongoConnect();\n  const db = client.db();\n  const ans = await db.collection(\"comment\").find({\n    eventId\n  }).toSort({\n    _id: -1\n  }).toArray();\n  console.log(\"==>ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nexport { mongoEmailRegistrationHandler, mongoCommentSavingHandler, mongoCommentReadingHandler };","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/helpers/mongodb.js"],"names":["MongoClient","mongoConnect","require","url","client","connect","mongoEmailRegistrationHandler","data","db","ans","collection","insertOne","email","console","log","close","mongoCommentSavingHandler","mongoCommentReadingHandler","eventId","find","toSort","_id","toArray"],"mappings":"AAAA,SAASA,WAAT,QAA4B,SAA5B;;AAEA,MAAMC,YAAY,GAAG,YAAY;AAC/B,QAAM;AAAED,IAAAA;AAAF,MAAkBE,OAAO,CAAC,SAAD,CAA/B;;AACA,QAAMC,GAAG,GACP,4EADF;AAEA,QAAMC,MAAM,GAAG,IAAIJ,WAAJ,CAAgBG,GAAhB,CAAf;AACA,QAAMC,MAAM,CAACC,OAAP,EAAN;AACA,SAAOD,MAAP;AACD,CAPD;;AASA,MAAME,6BAA6B,GAAG,MAAOC,IAAP,IAAgB;AACpD,QAAMH,MAAM,GAAG,MAAMH,YAAY,EAAjC;AACA,QAAMO,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBE,UADe,CACJ,cADI,EAEfC,SAFe,CAEL;AAAEC,IAAAA,KAAK,EAAEL,IAAI,CAACK;AAAd,GAFK,CAAlB;AAGAC,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,GAAtB;AACA,QAAML,MAAM,CAACW,KAAP,EAAN;AACA,SAAON,GAAP;AACD,CATD;;AAWA,MAAMO,yBAAyB,GAAG,MAAOT,IAAP,IAAgB;AAChD,QAAMH,MAAM,GAAG,MAAMH,YAAY,EAAjC;AACA,QAAMO,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBE,UADe,CACJ,SADI,EAEfC,SAFe,CAELJ,IAFK,CAAlB;AAGAM,EAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBL,GAAtB;AACA,QAAML,MAAM,CAACW,KAAP,EAAN;AACA,SAAON,GAAP;AACD,CATD;;AAWA,MAAMQ,0BAA0B,GAAG,MAAOC,OAAP,IAAmB;AAClD,QAAMd,MAAM,GAAG,MAAMH,YAAY,EAAjC;AACA,QAAMO,EAAE,GAAGJ,MAAM,CAACI,EAAP,EAAX;AACA,QAAMC,GAAG,GAAG,MAAMD,EAAE,CACjBE,UADe,CACJ,SADI,EAEfS,IAFe,CAEV;AAACD,IAAAA;AAAD,GAFU,EAECE,MAFD,CAEQ;AAACC,IAAAA,GAAG,EAAC,CAAC;AAAN,GAFR,EAEkBC,OAFlB,EAAlB;AAIAT,EAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBL,GAAzB;AACA,QAAML,MAAM,CAACW,KAAP,EAAN;AACA,SAAON,GAAP;AACD,CAVH;;AAYA,SAASH,6BAAT,EAAwCU,yBAAxC,EAAmEC,0BAAnE","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nconst mongoConnect = async () => {\n  const { MongoClient } = require(\"mongodb\");\n  const url =\n    \"mongodb+srv://mongoAUser:i6m3jV7kqz8XP2S@cluster0.cl4dl.mongodb.net/nextjs\";\n  const client = new MongoClient(url);\n  await client.connect();\n  return client;\n};\n\nconst mongoEmailRegistrationHandler = async (data) => {\n  const client = await mongoConnect();\n  const db = client.db();\n  const ans = await db\n    .collection(\"registration\")\n    .insertOne({ email: data.email });\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst mongoCommentSavingHandler = async (data) => {\n  const client = await mongoConnect();\n  const db = client.db();\n  const ans = await db\n    .collection(\"comment\")\n    .insertOne(data);\n  console.log(\"ans : \", ans);\n  await client.close();\n  return ans;\n};\n\nconst mongoCommentReadingHandler = async (eventId) => {\n    const client = await mongoConnect();\n    const db = client.db();\n    const ans = await db\n      .collection(\"comment\")\n      .find({eventId}).toSort({_id:-1}).toArray()\n    \n    console.log(\"==>ans : \", ans);\n    await client.close();\n    return ans;\n  };\n\nexport { mongoEmailRegistrationHandler, mongoCommentSavingHandler, mongoCommentReadingHandler };\n"]},"metadata":{},"sourceType":"module"}