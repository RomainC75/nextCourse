{"ast":null,"code":"import _regeneratorRuntime from \"/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/node_modules/@babel/runtime/regenerator\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _asyncToGenerator from \"/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/components/input/comments.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  _s();\n\n  var eventId = props.eventId;\n\n  var _useState = useState(false),\n      showComments = _useState[0],\n      setShowComments = _useState[1];\n\n  var _useState2 = useState([]),\n      commentsState = _useState2[0],\n      setCommentsState = _useState2[1];\n\n  function toggleCommentsHandler() {\n    setShowComments(function (prevStatus) {\n      return !prevStatus;\n    });\n  }\n\n  function addCommentHandler(_x) {\n    return _addCommentHandler.apply(this, arguments);\n  }\n\n  function _addCommentHandler() {\n    _addCommentHandler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(commentData) {\n      var rawComments, comments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return fetch(\"/api/comment/\".concat(eventId), {\n                method: \"POST\",\n                body: JSON.stringify(commentData)\n              });\n\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return fetch(\"/api/comment/\".concat(eventId));\n\n            case 5:\n              rawComments = _context.sent;\n              _context.next = 8;\n              return rawComments.json();\n\n            case 8:\n              comments = _context.sent;\n              console.log('==> COMMENTS ', comments); // if()\n\n              setCommentsState(comments);\n              _context.next = 15;\n              break;\n\n            case 13:\n              _context.prev = 13;\n              _context.t0 = _context[\"catch\"](2);\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[2, 13]]);\n    }));\n    return _addCommentHandler.apply(this, arguments);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.comments,\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: toggleCommentsHandler,\n      children: [showComments ? 'Hide' : 'Show', \" Comments\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), showComments && /*#__PURE__*/_jsxDEV(NewComment, {\n      onAddComment: addCommentHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 24\n    }, this), showComments && /*#__PURE__*/_jsxDEV(CommentList, {\n      comments: commentsState\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"gSAQtlQBPUbfJ34esizmIuoscjI=\");\n\n_c = Comments;\nexport default Comments;\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["/home/rom/Documents/dev/nextjs/tuto/section9-apiRoutes/components/input/comments.js"],"names":["useState","CommentList","NewComment","classes","Comments","props","eventId","showComments","setShowComments","commentsState","setCommentsState","toggleCommentsHandler","prevStatus","addCommentHandler","commentData","fetch","method","body","JSON","stringify","rawComments","json","comments","console","log"],"mappings":";;;;;;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AAEA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AACA,OAAOC,OAAP,MAAoB,uBAApB;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAAA,MACfC,OADe,GACHD,KADG,CACfC,OADe;;AAAA,kBAGiBN,QAAQ,CAAC,KAAD,CAHzB;AAAA,MAGhBO,YAHgB;AAAA,MAGFC,eAHE;;AAAA,mBAImBR,QAAQ,CAAC,EAAD,CAJ3B;AAAA,MAIhBS,aAJgB;AAAA,MAIDC,gBAJC;;AAMvB,WAASC,qBAAT,GAAiC;AAC/BH,IAAAA,eAAe,CAAC,UAACI,UAAD;AAAA,aAAgB,CAACA,UAAjB;AAAA,KAAD,CAAf;AACD;;AARsB,WAURC,iBAVQ;AAAA;AAAA;;AAAA;AAAA,kFAUvB,iBAAiCC,WAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACQC,KAAK,wBAAiBT,OAAjB,GAA2B;AACpCU,gBAAAA,MAAM,EAAC,MAD6B;AAEpCC,gBAAAA,IAAI,EAACC,IAAI,CAACC,SAAL,CAAeL,WAAf;AAF+B,eAA3B,CADb;;AAAA;AAAA;AAAA;AAAA,qBAM8BC,KAAK,wBAAiBT,OAAjB,EANnC;;AAAA;AAMUc,cAAAA,WANV;AAAA;AAAA,qBAOyBA,WAAW,CAACC,IAAZ,EAPzB;;AAAA;AAOQC,cAAAA,QAPR;AAQEC,cAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,QAA7B,EARF,CASE;;AACAZ,cAAAA,gBAAgB,CAACY,QAAD,CAAhB;AAVF;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAVuB;AAAA;AAAA;;AA2BvB,sBACE;AAAS,IAAA,SAAS,EAAEnB,OAAO,CAACmB,QAA5B;AAAA,4BACE;AAAQ,MAAA,OAAO,EAAEX,qBAAjB;AAAA,iBACGJ,YAAY,GAAG,MAAH,GAAY,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIGA,YAAY,iBAAI,QAAC,UAAD;AAAY,MAAA,YAAY,EAAEM;AAA1B;AAAA;AAAA;AAAA;AAAA,YAJnB,EAKGN,YAAY,iBAAI,QAAC,WAAD;AAAa,MAAA,QAAQ,EAAEE;AAAvB;AAAA;AAAA;AAAA;AAAA,YALnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GApCQL,Q;;KAAAA,Q;AAsCT,eAAeA,QAAf","sourcesContent":["import { useState } from 'react';\n\nimport CommentList from './comment-list';\nimport NewComment from './new-comment';\nimport classes from './comments.module.css';\n\nfunction Comments(props) {\n  const { eventId } = props;\n\n  const [showComments, setShowComments] = useState(false);\n  const [commentsState, setCommentsState] = useState([])\n\n  function toggleCommentsHandler() {\n    setShowComments((prevStatus) => !prevStatus);\n  }\n\n  async function addCommentHandler(commentData) {\n    await fetch(`/api/comment/${eventId}`,{\n      method:\"POST\",\n      body:JSON.stringify(commentData)\n    })\n    try{\n      const rawComments = await fetch(`/api/comment/${eventId}`)\n    const comments = await rawComments.json()\n    console.log('==> COMMENTS ', comments)\n    // if()\n    setCommentsState(comments)\n    }catch(error){\n\n    }\n    \n  }\n\n  return (\n    <section className={classes.comments}>\n      <button onClick={toggleCommentsHandler}>\n        {showComments ? 'Hide' : 'Show'} Comments\n      </button>\n      {showComments && <NewComment onAddComment={addCommentHandler} />}\n      {showComments && <CommentList comments={commentsState}/>}\n    </section>\n  );\n}\n\nexport default Comments;\n"]},"metadata":{},"sourceType":"module"}